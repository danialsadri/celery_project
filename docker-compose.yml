version: "3.9"

services:
  backend:
    container_name: backend
    image: backend
    build:
      context: ./config/
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./config:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DATABASE-NAME=postgres
      - DATABASE-USER=postgres
      - DATABASE-PASSWORD=postgres
      - DATABASE-HOST=database
      - DATABASE-PORT=5432
    depends_on:
      - database
      - redis
      - rabbitmq
    restart: always

  database:
    container_name: database
    image: postgres:16.0
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: redis
    image: redis:7.2.4
    ports:
      - "6379:6379"
    command: sh -c "redis-server --save 60 1 --loglevel warning"
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5673:5672"
      - "15672:15672"
    restart: always

  celery:
    container_name: celery
    image: celery
    build:
      context: ./config/
      dockerfile: Dockerfile
    command: sh -c "celery -A config worker -l INFO -B"
    volumes:
      - ./config:/app
    environment:
      - SECRET_KEY=test
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DATABASE-NAME=postgres
      - DATABASE-USER=postgres
      - DATABASE-PASSWORD=postgres
      - DATABASE-HOST=database
      - DATABASE-PORT=5432
    depends_on:
      - redis
      - backend
      - rabbitmq
    restart: always

  flower:
    container_name: flower
    image: mher/flower:2.0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/

#  celery_stand_alone:
#    container_name: celery_stand_alone
#    image: celery_stand_alone
#    build:
#      context: ./celery_worker/
#      dockerfile: Dockerfile
#    command: sh -c "celery -A celery_base worker -l INFO -Q queue2"
#    volumes:
#      - ./celery_worker:/app
#    environment:
#      - BROKER_URL=redis://redis:6379/0
#      - RESULT_BACKEND=redis://redis:6379/0
#    depends_on:
#      - redis
#      - backend
#    restart: always

volumes:
  database:
